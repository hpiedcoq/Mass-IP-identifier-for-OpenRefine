[
  {
    "op": "core/column-rename",
    "description": "Rename column Column 1 to Adresse IP",
    "oldColumnName": "Column 1",
    "newColumnName": "Adresse IP"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Adresse IP to IP",
    "oldColumnName": "Adresse IP",
    "newColumnName": "IP"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IP using expression grel:value.replace(/(:)/,\"\").replace(/(,|;)/,\".\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "IP",
    "expression": "grel:value.replace(/(:)/,\"\").replace(/(,|;)/,\".\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IP using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "IP",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column IP using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "IP",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/row-reorder",
    "description": "Reorder rows",
    "mode": "record-based",
    "sorting": {
      "criteria": [
        {
          "errorPosition": 1,
          "caseSensitive": false,
          "valueType": "string",
          "column": "IP",
          "blankPosition": 2,
          "reverse": false
        }
      ]
    }
  },
  {
    "op": "core/blank-down",
    "description": "Blank down cells in column IP",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "IP"
  },
  {
    "op": "core/row-removal",
    "description": "Remove rows",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "IP",
          "omitBlank": false,
          "type": "list",
          "columnName": "IP"
        }
      ]
    }
  },
  {
    "op": "core/column-addition",
    "description": "Create column Telize at index 1 based on column IP using expression grel:\"http://www.ip-api.com/json/\"+value",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "IP",
          "omitBlank": false,
          "type": "list",
          "columnName": "IP"
        }
      ]
    },
    "newColumnName": "Telize",
    "columnInsertIndex": 1,
    "baseColumnName": "IP",
    "expression": "grel:\"http://www.ip-api.com/json/\"+value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "description": "Create column Json at index 2 by fetching URLs based on column Telize using expression grel:value",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "IP",
          "omitBlank": false,
          "type": "list",
          "columnName": "IP"
        }
      ]
    },
    "newColumnName": "Json",
    "columnInsertIndex": 2,
    "baseColumnName": "Telize",
    "urlExpression": "grel:value",
    "onError": "set-to-blank",
    "delay": 800
  },
  {
    "op": "core/column-addition",
    "description": "Create column Provider at index 3 based on column Json using expression grel:value.parseJson().isp",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "Provider",
    "columnInsertIndex": 3,
    "baseColumnName": "Json",
    "expression": "grel:value.parseJson().isp",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Pays at index 3 based on column Json using expression grel:value.parseJson().country",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "Pays",
    "columnInsertIndex": 3,
    "baseColumnName": "Json",
    "expression": "grel:value.parseJson().country",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Région at index 3 based on column Json using expression grel:value.parseJson().region",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "Région",
    "columnInsertIndex": 3,
    "baseColumnName": "Json",
    "expression": "grel:value.parseJson().region",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Lat at index 3 based on column Json using expression grel:value.parseJson().lat",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "Lat",
    "columnInsertIndex": 3,
    "baseColumnName": "Json",
    "expression": "grel:value.parseJson().lat",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Lon at index 3 based on column Json using expression grel:value.parseJson().lon",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "Lon",
    "columnInsertIndex": 3,
    "baseColumnName": "Json",
    "expression": "grel:value.parseJson().lon",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Lat, Lon at index 5 based on column Lat using expression grel:value+\", \"+cells[\"Lon\"].value",
    "engineConfig": {
      "mode": "record-based",
      "facets": []
    },
    "newColumnName": "Lat, Lon",
    "columnInsertIndex": 5,
    "baseColumnName": "Lat",
    "expression": "grel:value+\", \"+cells[\"Lon\"].value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column IP lookup at index 1 based on column IP using expression grel:\"http://api.statdns.com/x/\"+value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "IP lookup",
    "columnInsertIndex": 1,
    "baseColumnName": "IP",
    "expression": "grel:\"http://api.statdns.com/x/\"+value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "description": "Create column json lookup at index 2 by fetching URLs based on column IP lookup using expression grel:value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "json lookup",
    "columnInsertIndex": 2,
    "baseColumnName": "IP lookup",
    "urlExpression": "grel:value",
    "onError": "set-to-blank",
    "delay": 500
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column json lookup using expression grel:value.partition(\"rdata\\\"\\:\")[2].partition(\"\\\"\")[2].partition(\"\\\"\")[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "json lookup",
    "expression": "grel:value.partition(\"rdata\\\"\\:\")[2].partition(\"\\\"\")[2].partition(\"\\\"\")[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-removal",
    "description": "Remove column IP lookup",
    "columnName": "IP lookup"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Telize",
    "columnName": "Telize"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Json",
    "columnName": "Json"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column json lookup to IP Lookup",
    "oldColumnName": "json lookup",
    "newColumnName": "IP Lookup"
  }
]
